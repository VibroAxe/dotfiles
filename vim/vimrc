set nocompatible              " be iMproved, required
colorscheme default

let $VIMHOME = $HOME."/.vim/"

filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim

"Enable balooning before ale is loaded
let g:ale_set_balloons=1

call vundle#begin()"

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'
Plugin 'vim-scripts/sudo.vim'
"Plugin 'gmarik/sudo-gui.vim'
"Bundle 'vim-airline/vim-airline'
"Bundle 'vim-airline/vim-airline-themes'
Plugin 'itchyny/lightline.vim'
Plugin 'itchyny/vim-gitbranch'
Plugin 'nanotech/jellybeans.vim'
Plugin 'airblade/vim-gitgutter'
Plugin 'nathanaelkane/vim-indent-guides'
"Plugin 'scrooloose/syntastic'
Plugin 'rodjek/vim-puppet'
Plugin 'editorconfig/editorconfig-vim'

"Automatic Lint Engine
Plugin 'dense-analysis/ale'
Plugin 'maximbaz/lightline-ale'

" Your stuff is going go here...

" All of your Bundles must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

let leadermap="\\"

" Fix vim's bad handling of the numpad
inoremap <Esc>Oq 1
inoremap <Esc>Or 2
inoremap <Esc>Os 3
inoremap <Esc>Ot 4
inoremap <Esc>Ou 5
inoremap <Esc>Ov 6
inoremap <Esc>Ow 7
inoremap <Esc>Ox 8
inoremap <Esc>Oy 9
inoremap <Esc>Op 0
inoremap <Esc>On .
noremap <Esc>OQ /
inoremap <Esc>OR *
inoremap <Esc>Ol +
inoremap <Esc>OS -
inoremap <Esc>OM <Enter>

" Enable vim's mouse mode
set mouse=a       "Enable mouse support and marvel at the ability to click around and mouse wheel scroll o_O
vmap <C-C> y      "Ctrl_C to yank (Copy)
vmap <C-V> p      "Ctrl_V to paste

set noexpandtab     " Soft tabs all the things
set tabstop=2     " 2 spaces is used almost everywhere now
set shiftwidth=2  " When using >> then use 2 spaces
set autoindent    " Well, obviously
set smartindent   " As opposed to dumb indent

set noautowrite
set number
set autoread      " Read changes from underlying file if it changes
set showmode      " Showing current mode is helpful++
set showcmd
set nocompatible  " Actually make this vim
set ttyfast       " We don't use 33.6 modems these days
set ruler

set esckeys       " Allow escape key in insert mode
"set cursorline    " Highlight the line we're on
set encoding=utf8 " Really, people still use ASCII

set incsearch     " Use incremental search like OMG yes
set ignorecase    " Ignore case when searching
set hlsearch      " Highlight searching
set showmatch     " Show me where things match
set diffopt=filler,iwhite "Nice diff options
silent! set showbreak=â†ª   " Cooler linebreak, silent incase we don't have utf8
set noswapfile    " It's 2014, GO AWAY FFS


syntax enable
set background=dark
silent! colorscheme jellybeans
"set ofu=syntaxcomplete#Complete

" Better Completion
set completeopt=longest,menuone,preview

" Ctrl+left/right
execute "set <xUp>=\e[1;*A"
execute "set <xDown>=\e[1;*B"
execute "set <xRight>=\e[1;*C"
execute "set <xLeft>=\e[1;*D"

"Enable new file templating system
autocmd BufNewFile * :silent! exec ":0r ".$VIMHOME."templates/".&ft

"Allow :Build :Upload for .ino files
autocmd BufReadPre,FileReadPre *.ino command Build !arduino --verify %
autocmd BufReadPre,FileReadPre *.ino command Upload !arduino --upload % 
autocmd BufReadPre,FileReadPre *.ino nmap <leader>B :Build<CR>
autocmd BufReadPre,FileReadPre *.ino nmap <leader>b :Build<CR>
autocmd BufReadPre,FileReadPre *.ino nmap <leader>U :Upload<CR>
autocmd BufReadPre,FileReadPre *.ino nmap <leader>u :Upload<CR>

"Configure Plugins

" ---------------
"  Sudo
" ---------------
command -bang W SudoWrite %

" ---------------
" Vundle
" ---------------
nmap <Leader>vi :PluginInstall<CR>
nmap <Leader>vu :PluginInstall!<CR> " Because this also updates
nmap <Leader>vc :PluginClean<CR>

" ---------------
" Syntastic
" ---------------
let g:syntastic_enable_signs=1
let g:syntastic_auto_loc_list=1

let g:syntastic_puppet_puppetlint_args = '--no-80chars-check --no-class_inherits_from_params_class-check --no-only_variable_string'


" ---------------
" Lightline
" ---------------
set laststatus=2
set noshowmode
let g:lightline = {
	  \ 'colorscheme': 'one', 
		\  'active': {
    \   'left': [ [ 'mode', 'paste' ],
    \             [ 'gitbranch', 'readonly', 'filename', 'modified' ] ],
    \  'right': [ [ 'linter_checking', 'linter_errors', 'linter_warnings', 'linter_infos', 'linter_ok' ],
    \             [ 'lineinfo' ],
	  \             [ 'percent' ],
	  \             [ 'fileformat', 'fileencoding', 'filetype'] ]
    \ },
    \ 'component_function': {
    \   'gitbranch': 'gitbranch#name'
    \ },
		\ 'component_expand': {
    \  'linter_checking': 'lightline#ale#checking',
    \  'linter_infos': 'lightline#ale#infos',
    \  'linter_warnings': 'lightline#ale#warnings',
    \  'linter_errors': 'lightline#ale#errors',
    \  'linter_ok': 'lightline#ale#ok',
    \ },
		\ 'component_type': {
    \     'linter_checking': 'right',
		\     'linter_infos': 'right',
    \     'linter_warnings': 'warning',
    \     'linter_errors': 'error',
    \     'linter_ok': 'right',
    \ }
		\}
